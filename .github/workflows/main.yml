name: RDP
on:
  workflow_dispatch:

jobs:
  secure-rdp:
    runs-on: windows-latest
    timeout-minutes: 4320   # 72 ساعة (الحد الأقصى من GitHub)
    steps:
      - name: Configure Core RDP Settings
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "SecurityLayer" -Value 0 -Force
          netsh advfirewall firewall delete rule name="RDP-Tailscale"
          netsh advfirewall firewall add rule name="RDP-Tailscale" dir=in action=allow protocol=TCP localport=3389
          Restart-Service -Name TermService -Force

      - name: Create RDP User with Static Password
        run: |
          $password = "admin@123"
          $securePass = ConvertTo-SecureString $password -AsPlainText -Force

          if (-not (Get-LocalUser -Name "TOOLBOXLAP" -ErrorAction SilentlyContinue)) {
              New-LocalUser -Name "TOOLBOXLAP" -Password $securePass -AccountNeverExpires
          }

          Add-LocalGroupMember -Group "Administrators" -Member "TOOLBOXLAP"
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member "TOOLBOXLAP"

          echo "RDP_CREDS=User: TOOLBOXLAP | Password: $password" >> $env:GITHUB_ENV

      - name: Install Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Upgrade pip and install comprehensive Python packages
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install --upgrade --no-cache-dir requests urllib3 httpx numpy scipy pandas matplotlib seaborn scikit-learn scikit-image pillow opencv-python jupyter notebook ipykernel ipython nbconvert nbformat ipywidgets pytest pytest-cov tox virtualenv pipenv poetry Flask Django fastapi gunicorn uvicorn starlette sqlalchemy alembic psycopg2-binary pymongo redis celery kombu sqlalchemy-utils openpyxl xlrd xlwt python-dotenv PyYAML lxml beautifulsoup4 html5lib selenium playwright requests-html scrapy aiohttp websockets paramiko cryptography pyOpenSSL pycryptodome pycrypto python-gnupg bcrypt scrypt simple-crypt keyring pyjwt oauthlib requests-oauthlib Pillow pyinstaller autopep8 black isort flake8 mypy coverage boto3 google-cloud-storage google-auth azure-storage-blob firebase-admin sentry-sdk prometheus-client opentelemetry-api opentelemetry-sdk thrift protobuf grpcio ruamel.yaml pytz tzlocal humanize tqdm regex psutil schedule click rich loguru colorama markdown mkdocs sphinx Sphinx-rtd-theme param sqlalchemy-searchable

      - name: Install Tailscale
        run: |
          $tsUrl = "https://pkgs.tailscale.com/stable/tailscale-setup-1.82.0-amd64.msi"
          $installerPath = "$env:TEMP\tailscale.msi"

          Invoke-WebRequest -Uri $tsUrl -OutFile $installerPath
          Start-Process msiexec.exe -ArgumentList "/i", "`"$installerPath`"", "/quiet", "/norestart" -Wait
          Remove-Item $installerPath -Force

      - name: Establish Tailscale Connection
        run: |
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=gh-runner-$env:GITHUB_RUN_ID
          $tsIP = $null
          $retries = 0
          while (-not $tsIP -and $retries -lt 10) {
              $tsIP = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4
              Start-Sleep -Seconds 5
              $retries++
          }
          if (-not $tsIP) {
              Write-Error "Tailscale IP not assigned. Exiting."
              exit 1
          }
          echo "TAILSCALE_IP=$tsIP" >> $env:GITHUB_ENV

      - name: Verify RDP Accessibility
        run: |
          Write-Host "Tailscale IP: $env:TAILSCALE_IP"
          $testResult = Test-NetConnection -ComputerName $env:TAILSCALE_IP -Port 3389
          if (-not $testResult.TcpTestSucceeded) {
              Write-Error "TCP connection to RDP port 3389 failed"
              exit 1
          }
          Write-Host "TCP connectivity successful!"

      - name: Maintain Connection (72h)
        run: |
          Write-Host "`n=== RDP ACCESS ==="
          Write-Host "Address: $env:TAILSCALE_IP"
          Write-Host "Username: TOOLBOXLAP"
          Write-Host "Password: admin@123"
          Write-Host "==================`n"

          $end = (Get-Date).AddHours(72)
          while ((Get-Date) -lt $end) {
              Write-Host "[$(Get-Date)] RDP Active - Auto-stop after 72 hours"
              Start-Sleep -Seconds 300
          }
